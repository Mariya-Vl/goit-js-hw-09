{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,UAClCC,YAAaF,SAASC,cAAc,wBACpCE,WAAYH,SAASC,cAAc,uBACnCG,UAAWJ,SAASC,cAAc,uBAoCpC,SAASI,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAQtC,OAPgB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CArCjCT,EAAKC,UAAUe,iBAAiB,SAEhC,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAASC,OAAOpB,EAAKI,YAAYiB,OACvC,IAAIC,EAAQF,OAAOpB,EAAKK,WAAWgB,OACnC,MAAME,EAAOH,OAAOpB,EAAKM,UAAUe,OAEnC,IAAK,IAAIG,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EACrDC,YAAW,KACTlB,EAAciB,EAAUF,GACrBI,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA7B,GAAS8B,OAAOC,KACd,uBAAqBrB,QAAiBC,MAAU,IAInDqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBvB,QAAeC,MAAU,IAIhDuB,SAAQ,KACPV,GAASC,CAAI,GACb,GACHD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  submitBtn: document.querySelector('button'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n};\n\nlet timeoutlId = null;\n\nrefs.submitBtn.addEventListener('click', startPromise);\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n  const amount = Number(refs.amountInput.value);\n  let delay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    setTimeout(() => {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notiflix.Notify.info(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          );\n          // delay += step;\n        })\n        .catch(({ position, delay }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          );\n          // delay += step;\n        })\n        .finally(() => {\n          delay += step;\n        });\n    }, delay);\n    // delay = delay + step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n  return promise;\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","submitBtn","document","querySelector","amountInput","delayInput","stepInput","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","evt","preventDefault","amount","Number","value","delay1","step","position1","setTimeout","then","$parcel$interopDefault","Notify","info","catch","failure","finally"],"version":3,"file":"03-promises.15ddd95c.js.map"}