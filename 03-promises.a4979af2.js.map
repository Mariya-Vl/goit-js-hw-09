{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,UAClCC,YAAaF,SAASC,cAAc,wBACpCE,WAAYH,SAASC,cAAc,uBACnCG,UAAWJ,SAASC,cAAc,uBA4BpC,SAASI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAhCbT,EAAKC,UAAUe,iBAAiB,SAEhC,SAAsBC,GACpBA,EAAIC,iBACJ,MAAMC,EAASC,OAAOpB,EAAKI,YAAYiB,OACvC,IAAIC,EAAQF,OAAOpB,EAAKK,WAAWgB,OACnC,MAAME,EAAOH,OAAOpB,EAAKM,UAAUe,OAEnC,IAAK,IAAIG,EAAW,EAAGA,GAAYL,EAAQK,GAAY,EAAG,CAGxDjB,EAAciB,EAFGF,EAAQC,GAAQC,EAAW,IAGzCC,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA5B,GAAS6B,OAAOC,KAAK,uBAAqBpB,QAAiBC,MAAU,IAEtEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA5B,GAAS6B,OAAOG,QACd,sBAAoBtB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  submitBtn: document.querySelector('button'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n};\n\nlet timeoutlId = null;\n\nrefs.submitBtn.addEventListener('click', startPromise);\n\nfunction startPromise(evt) {\n  evt.preventDefault();\n  const amount = Number(refs.amountInput.value);\n  let delay = Number(refs.delayInput.value);\n  const step = Number(refs.stepInput.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    const delayAll = delay + step * (position - 1);\n    // console.log(delayAll);\n    createPromise(position, delayAll)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.info(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","submitBtn","document","querySelector","amountInput","delayInput","stepInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","amount","Number","value","delay1","step","position1","then","$parcel$interopDefault","Notify","info","catch","failure"],"version":3,"file":"03-promises.a4979af2.js.map"}